{"version":3,"sources":["webpack:///./src/views/Feedback.vue","webpack:///./node_modules/primevue/textarea/textarea.esm.js","webpack:///./src/views/Feedback.vue?336b"],"names":["state","feedback","rows","cols","icon","label","proceed","class","script","name","emits","props","modelValue","autoResize","Boolean","this","$el","offsetParent","resize","methods","style","window","getComputedStyle","height","borderTopWidth","borderBottomWidth","scrollHeight","parseFloat","maxHeight","overflowY","overflow","event","$emit","target","value","computed","toString","length","_ctx","_cache","$props","$setup","$data","$options","filled","$attrs","onInput","args","styleInject","css","ref","insertAt","document","head","getElementsByTagName","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","css_248z","render","components","Textarea","Button","setup","route","userId","params","feedbackReplies","timer","reactionTime","test","addDemographics","stopTimer","router","push","alert","startTimer","setInterval","clearInterval","headers","a","patch","setTimeout","__scopeId"],"mappings":"qNACI,eAEO,aADH,eAAqC,aAA9B,4B,KAGP,eAES,eADL,eAA+B,UAA3B,4B,KAGJ,eAA2G,UAAvG,sGAAkG,G,EAEtG,eAAI,mB,gKAVZ,EAGA,eAUO,aATH,EAGA,eAKU,gBAJN,EACA,eAAwD,G,WAArC,EAAAA,MAAMC,S,qDAAN,EAAAD,MAAMC,SAAQ,IAAEC,KAAK,IAAIC,KAAK,M,uBACjD,EACA,eAAwF,GAAhFC,KAAK,cAAcC,MAAM,SAAU,QAAK,+BAAE,EAAAC,YAAWC,MAAM,0B,uDCV3EC,EAAS,CACTC,KAAM,WACNC,MAAO,CAAC,qBACRC,MAAO,CACHC,WAAY,KACZC,WAAYC,SAEhB,UACQC,KAAKC,IAAIC,cAAgBF,KAAKF,YAC9BE,KAAKG,UAGb,UACQH,KAAKC,IAAIC,cAAgBF,KAAKF,YAC9BE,KAAKG,UAGbC,QAAS,CACL,SACI,MAAMC,EAAQC,OAAOC,iBAAiBP,KAAKC,KAC3CD,KAAKC,IAAII,MAAMG,OAAS,OACxBR,KAAKC,IAAII,MAAMG,OAAS,QAAQH,EAAMI,oBAAoBJ,EAAMK,uBAAuBV,KAAKC,IAAIU,kBAE5FC,WAAWZ,KAAKC,IAAII,MAAMG,SAAWI,WAAWZ,KAAKC,IAAII,MAAMQ,YAC/Db,KAAKC,IAAII,MAAMS,UAAY,SAC3Bd,KAAKC,IAAII,MAAMG,OAASR,KAAKC,IAAII,MAAMQ,WAGvCb,KAAKC,IAAII,MAAMU,SAAW,UAGlC,QAAQC,GACChB,KAAKF,YACNE,KAAKG,SAGTH,KAAKiB,MAAM,oBAAqBD,EAAME,OAAOC,SAGrDC,SAAU,CACN,SACI,OAA2B,MAAnBpB,KAAKH,YAAsBG,KAAKH,WAAWwB,WAAWC,OAAS,KAKnF,SAAS,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GACnD,OAAQ,iBAAa,eAAY,WAAY,eAAW,CACtDpC,MAAO,CAAC,0CAA2C,CAAC,WAAYoC,EAASC,OAAQ,6BAA8BJ,EAAO3B,cACrHyB,EAAKO,OAAQ,CACdX,MAAOM,EAAO5B,WACdkC,QAASP,EAAO,KAAOA,EAAO,GAAK,IAAIQ,IAAUJ,EAASG,SAAWH,EAASG,WAAWC,MACvF,KAAM,GAAI,CAAC,UAGjB,SAASC,EAAYC,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,qBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DlC,EAAQgC,SAASG,cAAc,SACnCnC,EAAMoC,KAAO,WAEI,QAAbL,GACEE,EAAKI,WACPJ,EAAKK,aAAatC,EAAOiC,EAAKI,YAKhCJ,EAAKM,YAAYvC,GAGfA,EAAMwC,WACRxC,EAAMwC,WAAWC,QAAUZ,EAE3B7B,EAAMuC,YAAYP,SAASU,eAAeb,KAI9C,IAAIc,EAAW,kIACff,EAAYe,GAEZvD,EAAOwD,OAAS,EAED,Q,iCD7DA,GACXC,WAAY,CACRC,SAAA,EACAC,OAAA,QAEJC,MALW,WAMP,IAAMC,EAAQ,iBACRC,EAAS,gBAAS,kBAAMD,EAAME,OAAOD,UAErCtE,EAAQ,eAAS,CACnBC,SAAU,GACVuE,gBAAiB,GACjBC,MAAO,KACPC,aAAc,IASlB,SAASpE,IACA,KAAKqE,KAAK3E,EAAMC,WAAeD,EAAMC,SAASoC,QAAU,GACzDrC,EAAMwE,gBAAgB,YAAcxE,EAAMC,SAC1C2E,IACAC,IACAC,EAAA,KAAOC,KAAK,WAEZC,MAAM,iEAId,SAASC,IACLjF,EAAMyE,MAAQS,aAAY,WACtBlF,EAAM0E,cAAgB,KACvB,IAGP,SAASG,IACLM,cAAcnF,EAAMyE,OACpBzE,EAAMwE,gBAAgB,cAAgBxE,EAAM0E,aApC3C,SAuCUE,IAvCV,6FAuCL,2GACUQ,EAAU,CAAC,eAAgB,oBADrC,SAEU,EAAAC,EAAMC,MAAN,kCAAuChB,EAAOpC,OAAS,CACzDjC,SAAUD,EAAMwE,iBACjB,CAACY,YAJR,2CAvCK,wBA8CL,OAnCA,gBAAU,WACNG,YAAW,WACPN,UAiCD,CACHjF,QACAM,aE9EZ,EAAO0D,OAASA,EAChB,EAAOwB,UAAY,kBAEJ","file":"js/chunk-2d0daf2f.d6b1f6e8.js","sourcesContent":["<template>\n    <head>\n        <title>Music Skill Assessment</title>\n    </head>\n    <body>\n        <header>\n            <h1>Music Skill Assessment</h1>\n        </header>\n        <section>\n            <h3>Do you have any comments, remarks, or suggestions for our study? Your thoughts are valuable to us.</h3>\n            <Textarea v-model=\"state.feedback\" rows=\"5\" cols=\"50\" />\n            <br>\n            <Button icon=\"pi pi-check\" label=\"Submit\" @click=\"proceed()\" class=\"p-button-success\" />\n        </section>\n    </body>\n</template>\n\n<script>\nimport { onMounted, reactive, computed } from 'vue'\n\nimport {useRoute} from 'vue-router'\nimport router from '@/router/index.js'\n\nimport Textarea from 'primevue/textarea';\nimport Button from 'primevue/button';\n\nimport axios from 'axios'\n\nexport default {\n    components: {\n        Textarea,\n        Button\n    },\n    setup () {\n        const route = useRoute();\n        const userId = computed(() => route.params.userId)\n\n        const state = reactive({\n            feedback: '',\n            feedbackReplies: {},\n            timer: null,\n            reactionTime: 0 // in ms\n        })\n\n        onMounted(() => {\n            setTimeout(() => {\n                startTimer()\n            })\n        })\n\n        function proceed(){\n            if ((/\\S/.test(state.feedback)) && (state.feedback.length >= 2)) {\n                state.feedbackReplies[\"feedback\"] = state.feedback\n                addDemographics()\n                stopTimer()\n                router.push('/final')\n            } else {\n                alert(\"Your feedback will help us improve our studies in the future.\")\n            }\n        }\n\n        function startTimer() {\n            state.timer = setInterval(()=>{\n                state.reactionTime += 10\n            }, 10)\n        }\n\n        function stopTimer() {\n            clearInterval(state.timer)\n            state.feedbackReplies[\"time_spent\"] = state.reactionTime\n        }\n\n        async function addDemographics() {\n            const headers = {\"Content-Type\": \"application/json\"}\n            await axios.patch(`https://crowdmanager.eu/${userId.value}`, {\n                feedback: state.feedbackReplies\n            }, {headers})\n        }\n\n        return {\n            state,\n            proceed\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>","import { openBlock, createBlock, mergeProps } from 'vue';\n\nvar script = {\n    name: 'Textarea',\n    emits: ['update:modelValue'],\n    props: {\n        modelValue: null,\n        autoResize: Boolean\n    },\n    mounted() {\n        if (this.$el.offsetParent && this.autoResize) {\n            this.resize();\n        }\n    },\n    updated() {\n        if (this.$el.offsetParent && this.autoResize) {\n            this.resize();\n        }\n    },\n    methods: {\n        resize() {\n            const style = window.getComputedStyle(this.$el);\n            this.$el.style.height = 'auto';\n            this.$el.style.height = `calc(${style.borderTopWidth} + ${style.borderBottomWidth} + ${this.$el.scrollHeight}px)`;\n\n            if (parseFloat(this.$el.style.height) >= parseFloat(this.$el.style.maxHeight)) {\n                this.$el.style.overflowY = \"scroll\";\n                this.$el.style.height = this.$el.style.maxHeight;\n            }\n            else {\n                this.$el.style.overflow = \"hidden\";\n            }\n        },\n        onInput(event) {\n             if (this.autoResize) {\n                this.resize();\n            }\n\n            this.$emit('update:modelValue', event.target.value);\n        }\n    },\n    computed: {\n        filled() {\n            return (this.modelValue != null && this.modelValue.toString().length > 0)\n        }\n    }\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (openBlock(), createBlock(\"textarea\", mergeProps({\n    class: ['p-inputtextarea p-inputtext p-component', {'p-filled': $options.filled, 'p-inputtextarea-resizable ': $props.autoResize}]\n  }, _ctx.$attrs, {\n    value: $props.modelValue,\n    onInput: _cache[1] || (_cache[1] = (...args) => ($options.onInput && $options.onInput(...args)))\n  }), null, 16, [\"value\"]))\n}\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \"\\n.p-inputtextarea-resizable {\\n    overflow: hidden;\\n    resize: none;\\n}\\n.p-fluid .p-inputtextarea {\\n    width: 100%;\\n}\\n\";\nstyleInject(css_248z);\n\nscript.render = render;\n\nexport default script;\n","import { render } from \"./Feedback.vue?vue&type=template&id=5e178d00&scoped=true\"\nimport script from \"./Feedback.vue?vue&type=script&lang=js\"\nexport * from \"./Feedback.vue?vue&type=script&lang=js\"\nscript.render = render\nscript.__scopeId = \"data-v-5e178d00\"\n\nexport default script"],"sourceRoot":""}